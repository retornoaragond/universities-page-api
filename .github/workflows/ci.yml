name: CI

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bundle_install:
    runs-on: ubuntu-latest

    env:
      BUNDLE_PATH: vendor/bundle
      GEM_HOME: vendor/bundle
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      RAILS_ENV: test

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: bundle-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - if: ${{ steps.bundle-cache.outputs.cache-hit != 'true' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - if: ${{ steps.bundle-cache.outputs.cache-hit != 'true' }}
        name: Bundle install
        run: |
          bundle install --jobs 4 --retry 3


  rspec:
    runs-on: ubuntu-latest
    needs: bundle_install

    env:
      BUNDLE_PATH: vendor/bundle
      GEM_HOME: vendor/bundle
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      DB_USER: postgres
      DB_PASSWORD: postgres
      CC_TEST_REPORTER_ID: 40d28685562b0dd9ba05bf4ee3d9aee9619b35bb39af0e88d219c7140cb75f94

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: universities_api_test
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Bundle install
        run: |
          bundle install --jobs 4 --retry 3

      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Setup Database
        run: |
          cp config/database.template.yml config/database.yml
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - run: bundle exec rspec

      - name: Publish code coverage
        run: |
          export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          ./cc-test-reporter after-build -r $CC_TEST_REPORTER_ID

  rubocop:
    runs-on: ubuntu-latest
    needs: bundle_install

    env:
      BUNDLE_PATH: vendor/bundle
      GEM_HOME: vendor/bundle
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      RAILS_ENV: test

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Bundle install
        run: bundle install --jobs 4 --retry 3

      - run: bundle exec rubocop --config .rubocop.yml
